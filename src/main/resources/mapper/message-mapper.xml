<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nowcoder.community.dao.Messagemapper">
    <sql id="selectField">
        id,from_id,to_id,conversation_id,content,status,create_time
    </sql>

    <sql id="insertField">
        from_id,to_id,conversation_id,content,status,create_time
    </sql>



    <insert id="insertMessage" parameterType="message" keyProperty="id">
        insert into message (<include refid="insertField"></include>)
        values (#{fromId},#{toId},#{conversationId},#{content},#{status},#{createTime})
    </insert>


    <update id="updateMessageStatus">
        update message set status = #{status}
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>

    </update>

    <select id="selectConversations" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectField"></include>
        from message
        where id in(
            select max(id) from message
            where status!=2
              and from_id !=1
              and (from_id=#{userId} or to_id=#{userId})
            group by conversation_id
        )
        order by id desc
        limit #{offset} ,#{limit}


    </select>

    <select id="selectConversationCount" resultType="java.lang.Integer">
        select count(m.maxid)  from (
            select max(id) as maxid
            from message
            where status!=2
            and from_id !=1
            and (from_id=#{userId} or to_id=#{userId})
            group by conversation_id
        ) as m
    </select>

    <select id="selectLetters" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectField"></include>
        from message
        where status!=2
        and from_id!=1
        and conversation_id = #{conversationId}
        order by id desc
        limit #{offset} ,#{limit}
    </select>

    <select id="selectLetterCount" resultType="java.lang.Integer">
        select count(id) from message
        where status!=2
        and from_id!=1
        and conversation_id = #{conversationId}
    </select>

    <select id="selectLetterUnreadCount" resultType="java.lang.Integer">
        select count(id) from message
        where to_id = #{userId}
        and from_id!=1
        and status = 0
        <if test="conversationId!=null">
            and conversation_id = #{conversationId}
        </if>
    </select>

    <select id="selectLatestNotice" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectField"></include>
            from message
            where id in (
                select max(id) from message
                    where from_id = 1
                    and to_id = #{userId}
                    and conversation_id = #{topic}
                    and status!=2
            )
    </select>

    <select id="selectNoticeCount" resultType="java.lang.Integer">
        select count(id) from message
        where from_id = 1
          and to_id = #{userId}
          and status!=2
        <if test="topic!=null">
            and conversation_id = #{topic}
        </if>
    </select>


    <select id="selectNoticeUnreadCount" resultType="java.lang.Integer">
        select count(id) from message
        where from_id = 1
          and to_id = #{userId}
          and conversation_id = #{topic}
          and status=0
    </select>

    <select id="selectNotices" resultType="com.nowcoder.community.entity.Message">
        select <include refid="selectField"></include>
            from message
            where from_id = 1
            and status !=2
            and to_id=#{userId}
            and conversation_id=#{topic}
            order by create_time desc
            limit #{offset},#{limit}
    </select>


</mapper>